[core]
	editor = vim
	whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol,blank-at-eof,blank-at-eol
	pager = less -r
    # use more compression
    #compression = 9
[color]
	ui = auto
	interactive = auto
[color "branch"]
	current = yellow reverse
	local = yellow bold
	remote = green bold
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse
[color "status"]
	added = green bold
	changed = yellow bold
	untracked = red bold
[diff]
	tool = icdiff
[difftool]
	prompt = false
[difftool "icdiff"]
	cmd = /usr/bin/icdiff --line-numbers $LOCAL $REMOTE
[alias]
	prune = fetch --prune
	# Because I constantly forget how to do this
	# https://git-scm.com/docs/git-fetch#git-fetch--p

	undo = reset --soft HEAD^
	# Not quite as common as an amend, but still common
	# https://git-scm.com/docs/git-reset#git-reset-emgitresetemltmodegtltcommitgt

	stash-all = stash save --include-untracked
	# We wanna grab those pesky un-added files!
	# https://git-scm.com/docs/git-stash

	glog = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
	# No need for a GUI - a nice, colorful, graphical representation
	# https://git-scm.com/docs/git-log
	# via https://medium.com/@payload.dd/thanks-for-the-git-st-i-will-use-this-4da5839a21a4

    glogfull = log --graph --full-history --all --color --pretty=tformat:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s%x20%x1b[33m(%an)%x1b[0m"
[github]
    user = leachim
[user]
    name = leachim
    email = leachim@users.noreply.github.com
	useconfigonly = true
[push]
	default = simple
	# "push the current branch back to the branch whose changes are usually integrated into the current branch"
	# "refuse to push if the upstream branchâ€™s name is different from the local one"
	# https://git-scm.com/docs/git-config#git-config-pushdefault

	followTags = true
	# Because I get sick of telling git to do it manually
	# https://git-scm.com/docs/git-config#git-config-pushfollowTags
[merge]
	ff = only
	# I pretty much never mean to do a real merge, since I use a rebase workflow.
	# Note: this global option applies to all merges, including those done during a git pull
	# https://git-scm.com/docs/git-config#git-config-mergeff

	conflictstyle = diff3
	# Standard diff is two sets of final changes. This introduces the original text before each side's changes.
	# https://git-scm.com/docs/git-config#git-config-mergeconflictStyle
[transfer]
    fsckobjects = true
	# To combat repository corruption!
	# Note: this global option applies during receive and transmit
	# https://git-scm.com/docs/git-config#git-config-transferfsckObjects
	# via https://groups.google.com/forum/#!topic/binary-transparency/f-BI4o8HZW0
[pull]
	ff = only
[fsck]
	zeroPaddedFilemode = ignore
