##### Tmux settings #####

# Change prefix key to CTRL-a
unbind C-b
set -g prefix C-a
bind C-a send-prefix
bind-key a last-window

# tmux messages are displayed for 4 seconds
set -g display-time 5000

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Use vim bindings
setw -g mode-keys vi
set -g status-keys vi

#bind-key -t vi-edit Up   history-up
#bind-key -t vi-edit Down history-down

# Sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Enable function keys
setw -g xterm-keys on

# Default shell according to system in use
set-option -g default-shell $SHELL

# Avoid issue with xterm unknown
# set -g default-terminal "tmux-256color"

# avoid accidental exit
set-environment -g 'IGNOREEOF' 100

# ----------------------
# Copy paste
# -----------------------

# Copy & Paste from/to System Clipboard
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"
bind C-p run "tmux set-buffer \"$(xclip -o -sel clipboard | tr -d '\n' | sed -n -e 's/ \+/ /g;s/\r//g;s/\\//gp;' | tr -s ' ')\"; tmux paste-buffer"
# bind C-y run "tmux show-buffer | xclip -sel clip -i"

# clever copy paste in tmux
set -g mouse on

# Copy mode
# https://unix.stackexchange.com/questions/58763/copy-text-from-one-tmux-pane-to-another-using-vim
# unbind [
bind -n M-Space copy-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-no-clear
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
# Also copy to system clipboard
bind-key -T copy-mode-vi y send-keys -X copy-pipe-no-clear ' xclip -sel clip -i'
# map copy mode to ctrl+alt+c
bind-key -n 'C-M-c' copy-mode
# map paste buffer to ctrl+alt+v
bind-key -n 'C-M-v' paste-buffer

# bind Escape copy-mode
unbind p
bind p paste-buffer
#bind -t vi-copy 'v' begin-selection
#bind -t vi-copy 'y' copy-selection
#bind -t vi-copy b copy-pipe 'xclip -in -selection clipboard'

# pane movement
# https://unix.stackexchange.com/questions/145857/how-do-you-hide-a-pane?noredirect=1&lq=1
bind-key < command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key > command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Double LMB Select & Copy (Word)
# bind-key -T copy-mode-vi DoubleClick1Pane; select-pane ; send-keys -X select-word-no-clear ; send-keys -X copy-pipe-no-clear "xclip -in -sel clipboard"
# bind-key -n DoubleClick1Pane; select-pane ; copy-mode -M ; send-keys -X select-word ; send-keys -X copy-pipe-no-clear "xclip -in -sel clipboard"

# in copy mode
# bind -t vi-copy v begin-selection # `v` begins a selection. (movement keys to select the desired bits)
# bind -t vi-copy y copy-selection # `y` copies the current selection to one of tmux's "paste buffers"
# bind -t vi-copy V rectangle-toggle # `V` changes between line- and columnwise selection
# bind -t vi-copy Y copy-end-of-line # ^1
# bind + delete-buffer
# I like Y to yank the current line, which is what ^1 does.
# In copy-mode you can jump around with almost all the commands that work in vim. / and ? work to search. There are no motions, so you canâ€™t y5w or yap.

# Change command delay
set -s escape-time 0
#Upon starting to use tmux, I noticed that I had to add a noticeable delay between two characters in a command sequence for it to recognize the command, for example between the C-a and n in C-a n. This is because tmux is waiting for an escape sequence.

# Set repeat timeout
set -g repeat-time 600

# Set the history limit
set-option -g history-limit 50000

# Set reload key to r
bind r source-file ~/.tmux.conf\; display "Reloaded!"


# ----------------------
# Color scheme
# -----------------------

# Count sessions and panes start at 1
set -g base-index 1
setw -g pane-base-index 1

# monitor alerts 
setw -g monitor-activity on
bind m setw monitor-activity
bind ! setw monitor-silence 300
set -g bell-action any
# set -g visual-activity both
# set -g visual-bell both
# set-option -g visual-silence on

# rotate through panes and maximize panes
bind-key -n C-q resize-pane -Z
#bind-key -n M-w select-pane -t :.-
bind-key -n C-w select-pane -l 
bind-key -n C-s select-pane -t :.+
bind-key -n C-a select-pane -t :.-

# Create temporary window for Maximizing and minimizing panes
bind i new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
bind o last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

# Some useful shortcuts
bind-key | split-window -h
bind-key - split-window -v

# Log output to a text file on demand
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# don't rename windows automatically
set-option -g allow-rename off

# start default session on server start
#new-session -s $USER
#send-keys 'clear && screenfetch -c 1,15' 'C-m'

# ----------------------
# Navigation
# -----------------------

bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r H resize-pane -L 5
bind-key -r L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Vim style pane selection
bind j select-pane -D
bind k select-pane -U
bind h select-pane -L
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Shift vim to switch windows
#bind -n S-Left  previous-window
#bind -n S-Right next-window
# easier and faster switching between next/prev window
bind -n C-S-Space previous-window
bind -n C-Space next-window
unbind-key -n C-n # occupied by vim
unbind-key -n Tab

# ----------------------
# Color scheme, Solarized dark
# -----------------------

#### COLOUR (Solarized light)
# uncomment to override to solarized light theme
#set-option -g status-bg white #base2
#set-window-option -g window-status-fg brightyellow #base00
#set-option -g pane-border-fg white #base2
#set-option -g pane-active-border-fg brightcyan #base1
#set-option -g message-bg white #base2
#set-option -g message-fg brightred #orange
### END SOLARIZED light

# default statusbar colors
set -g status-style fg=yellow,bg=colour235,default,dim
# active window title colors
setw -g window-status-current-style bg=default,fg=brightred,bold,blink,underscore
# default window title colors
setw -g window-status-style bg=default,fg=brightblue

# pane border
set -g pane-border-style fg=black
set -g pane-active-border-style fg=brightgreen

# message text
set -g message-style bg=black,fg=brightred

# pane number display
set-option -g display-panes-active-colour brightred #blue
set-option -g display-panes-colour blue #brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

##########################################################################
# bell
set-window-option -g window-status-bell-style fg=black,bg=red #base02, red

# ----------------------
# Status bar
# -----------------------

# some status bar options
set-option -g status on                # turn the status bar on
set -g status-interval 5              # set update frequencey (default 15 seconds)
set -g status-justify centre           # center window list for clarity
# set-option -g status-position top    # position the status bar at top of screen

# bells from any window propagate up to the terminal
set -g bell-action any


# show host name and public IP address on left side of status bar
set -g status-left-length 70
set -g status-left "#[fg=green] #h :: #[fg=brightblue]#(curl icanhazip.com)"

# show session name, window & pane number, date and time on right side of status bar
set -g status-right-length 60
set -g status-right "#[fg=brightred]#S #I:#P #[fg=yellow]:: %d %b %Y #[fg=green]:: %H:%M "

# clear screen alternative
bind C-l send-keys 'C-l'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# show all open panes and windows in a tree
bind -n C-t choose-tree

#set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-resurrect'
# tmux-plugins/tmux-sensible   \
#set -g @plugin 'tmux-plugins/tmux-copycat'
#set -g @plugin 'tmux-plugins/tmux-yank'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# copy on select
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-no-clear 'xsel -i'
bind-key -T copy-mode-vi DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-no-clear "xsel -i"
bind -T copy-mode DoubleClick1Pane select-pane \; send -X select-word-no-clear \; send -X copy-pipe-no-clear "xsel -i"

# # List of plugins
# set -g @tpm_plugins '        \
# tmux-plugins/tpm             \
# tmux-plugins/tmux-yank       \
# '

# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# set-environment -g PATH "~/.local/bin:/usr/bin"
# run '~/.tmux/plugins/tpm/tpm'
